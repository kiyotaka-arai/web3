// import $ from 'jquery';
// これでモジュールから探し出してきてくれる
// 最終的にはbundle.jsにjQueryの内容が出力される

import $ from 'jquery';
window.$ = $;
window.jQuery = $;
// コードを分割しているとjQuery変数がundefinedとなってしまう
// JavaScriptのソースコードの管理効率をあげるためにファイルを機能ごとなどに分割します。その際、下記のように分割されたファイルそれぞれでjQueryを必要とすることもあるかと思います。
// $をグローバルな変数として読み込む方法
// コンパイルされたmain.jsの中身を見ると、webpackがそれぞれ分割したJavaScriptファイルをクロージャとして読み込んでいることが分かります。
// そのため、１行目のimportで「$」に読み込まれたjQueryは、その後に読み込まれたコード（use-jquery-1.js, use-jquery-2.js）の中で参照することができないのです。
// これをなんとか一度のjQuery本体の読み込みだけで参照できるようにならないか。
// 調べてみると、jQueryをグローバルに読み込む方法が何通りか挙げられていました。しかし、自分のケースでは上手く動作したものとしなかったものがありました。それが以下の方法です。
// 【NG】window.$に読み込む
// windowオブジェクトに渡してあげることでグローバルに使えるようになるという方法です。
// 先程のmain.jsでjQueryを読み込んだ後、グローバルなwindowオブジェクトにそれを渡すことで以降のファイルで「$」や「jQuery」が参照できるようになるということです。
// tacのテンプレこれだけど、なんかダメって言ってるなぁ…
// $はwebpack使わないとグローバルになっているんだけど、webpack使うとグローバルが解除されるんじゃね？？？ クロージャがわかってないからあれだけど
// クロージャとは、プログラミング言語の機能・仕様の一つで、あるコードブロック内で定義された関数などが、そのブロックをスコープとする変数などを参照できること。 また、そのような機能を利用してブロック内部で定義された関数のこと。
// なるほどね
